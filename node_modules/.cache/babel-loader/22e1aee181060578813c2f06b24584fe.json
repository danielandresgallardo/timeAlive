{"ast":null,"code":"var _jsxFileName = \"/Users/danielgallardo/Development/react_test/src/components/Main/Main.js\",\n    _s = $RefreshSig$();\n\nimport Stack from '@mui/material/Stack';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [year, setYear] = useState(0);\n  const [month, setMonth] = useState(0);\n  const [day, setDay] = useState(0);\n\n  const calculateAll = () => {\n    const current = new Date();\n    const date = `${current.getDate()}/${current.getMonth() + 1}/${current.getFullYear()}`;\n    console.log(date);\n    console.log(year);\n    console.log(month);\n    console.log(day);\n    const timeAlive = `${current.getDate() - day}/${current.getMonth() + 1 - month}/${current.getFullYear() - year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"year\",\n            onChange: e => setYear(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Month:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"month\",\n            onChange: e => setMonth(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Day:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"day\",\n            onChange: e => setDay(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateAll,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Main, \"Llkj1jLMaYYt0ssxJxTgtajfPbA=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["Stack","useState","Main","year","setYear","month","setMonth","day","setDay","calculateAll","current","Date","date","getDate","getMonth","getFullYear","console","log","timeAlive","e","parseInt","target","value"],"sources":["/Users/danielgallardo/Development/react_test/src/components/Main/Main.js"],"sourcesContent":["import Stack from '@mui/material/Stack';\nimport {useState} from 'react';\n\nfunction Main(){\n    const [year, setYear] = useState(0);\n    const [month, setMonth] = useState(0);\n    const [day, setDay] = useState(0);\n\n\n    const calculateAll = () => {\n        const current = new Date();\n        const date = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()}`;\n        console.log(date);\n\n        console.log(year);\n        console.log(month);\n        console.log(day);\n\n        const timeAlive = `${current.getDate()-day}/${current.getMonth()+1-month}/${current.getFullYear()-year}`;\n\n    };\n\n    return(<>\n    <form>\n        <Stack direction=\"row\" spacing={2}>\n            <label>\n            Year:\n            <input \n                type=\"text\" \n                name=\"year\" \n                onChange={(e) => setYear(parseInt(e.target.value))}\n            />\n            </label>\n            <label>\n            Month:\n            <input \n                type=\"text\" \n                name=\"month\" \n                onChange={(e) => setMonth(parseInt(e.target.value))}\n            />\n            </label>\n            <label>\n            Day:\n            <input \n                type=\"text\" \n                name=\"day\" \n                onChange={(e) => setDay(parseInt(e.target.value))}\n                />\n            </label>\n        </Stack>\n        \n    </form>\n            <button onClick={calculateAll} >Calculate</button>\n    </>)\n}\n\nexport default Main;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;;AAEA,SAASC,IAAT,GAAe;EAAA;;EACX,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,CAAD,CAAhC;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,CAAD,CAA9B;;EAGA,MAAMQ,YAAY,GAAG,MAAM;IACvB,MAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;IACA,MAAMC,IAAI,GAAI,GAAEF,OAAO,CAACG,OAAR,EAAkB,IAAGH,OAAO,CAACI,QAAR,KAAmB,CAAE,IAAGJ,OAAO,CAACK,WAAR,EAAsB,EAAnF;IACAC,OAAO,CAACC,GAAR,CAAYL,IAAZ;IAEAI,OAAO,CAACC,GAAR,CAAYd,IAAZ;IACAa,OAAO,CAACC,GAAR,CAAYZ,KAAZ;IACAW,OAAO,CAACC,GAAR,CAAYV,GAAZ;IAEA,MAAMW,SAAS,GAAI,GAAER,OAAO,CAACG,OAAR,KAAkBN,GAAI,IAAGG,OAAO,CAACI,QAAR,KAAmB,CAAnB,GAAqBT,KAAM,IAAGK,OAAO,CAACK,WAAR,KAAsBZ,IAAK,EAAvG;EAEH,CAXD;;EAaA,oBAAO;IAAA,wBACP;MAAA,uBACI,QAAC,KAAD;QAAO,SAAS,EAAC,KAAjB;QAAuB,OAAO,EAAE,CAAhC;QAAA,wBACI;UAAA,iCAEA;YACI,IAAI,EAAC,MADT;YAEI,IAAI,EAAC,MAFT;YAGI,QAAQ,EAAGgB,CAAD,IAAOf,OAAO,CAACgB,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAT;UAH5B;YAAA;YAAA;YAAA;UAAA,QAFA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eASI;UAAA,kCAEA;YACI,IAAI,EAAC,MADT;YAEI,IAAI,EAAC,OAFT;YAGI,QAAQ,EAAGH,CAAD,IAAOb,QAAQ,CAACc,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAT;UAH7B;YAAA;YAAA;YAAA;UAAA,QAFA;QAAA;UAAA;UAAA;UAAA;QAAA,QATJ,eAiBI;UAAA,gCAEA;YACI,IAAI,EAAC,MADT;YAEI,IAAI,EAAC,KAFT;YAGI,QAAQ,EAAGH,CAAD,IAAOX,MAAM,CAACY,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAT;UAH3B;YAAA;YAAA;YAAA;UAAA,QAFA;QAAA;UAAA;UAAA;UAAA;QAAA,QAjBJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADO,eA8BC;MAAQ,OAAO,EAAEb,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA9BD;EAAA,gBAAP;AAgCH;;GAnDQP,I;;KAAAA,I;AAqDT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}